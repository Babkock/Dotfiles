#!/bin/bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xinput --set-prop 18 'Synaptics Tap Action' 1, 1, 1, 1, 1, 1, 1
xinput --set-prop 18 'Synaptics Tap Time' 120
xmodmap -e 'keycode 80=Up'
xmodmap -e 'keycode 88=Down'
xmodmap -e 'keycode 83=Left'
xmodmap -e 'keycode 85=Right'

# remove all existing keybindings
hc keyunbind --all

Mod=Mod4

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn ${TERMINAL:-st} # use your $TERMINAL with xterm as fallback

hc keybind $Mod-g 
hc keybind $Mod-period spawn firefox
hc keybind $Mod-hyphen spawn st -e transmission-remote-cli
hc keybind $Mod-comma spawn st -e ncmpcpp
hc keybind $Mod-slash spawn bigst -e ranger ~
hc keybind $Mod-semicolon spawn urxvt -bg rgba:1212/0202/0000/a9a9 -depth 32 -e ranger
hc keybind $Mod-backslash spawn thunderbird

hc keybind $Mod-space spawn dmenu_run -nf '#c0b18b' -nb '#141214' -sb '#dd3939' -sf '#000000' -fn 'Anonymous Pro-13' -p '$'

hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

hc keybind $Mod-u   set_layout horizontal
hc keybind $Mod-o   set_layout vertical
hc keybind $Mod-g   set_layout grid

resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

tag_names=( {1..6} )
tag_keys=( {1..6} 0 )

for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# layouting
#hc keybind $Mod-r grid toggle
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-Shift-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#6d0808'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 2
hc set focus_follows_mouse 1
hc set raise_on_focus 1
hc set raise_on_click 0

hc attr theme.active.color '#792008'
hc attr theme.normal.color '#101010'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color '#790808'
hc attr theme.border_width 2
hc attr theme.floating.border_width 1
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#620909'
hc attr theme.active.outer_color '#620909'
hc attr theme.background_color '#141414'

hc set window_gap 3
hc set frame_padding 2
hc set smart_window_surroundings 1
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc rule focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class='feh' focus=on manage=on pseudotile=off
hc rule class='Gimp' focus=on manage=on tag=4 switchtag=on pseudotile=off
hc rule class~'Firefox' focus=on tag=1 switchtag=on
hc rule class~'Thunderbird' focus=on pseudotile=on tag=5 switchtag=on
hc rule class='mpv' focus=on manage=on switchtag=on floating=on tag=2

hc set tree_style '╾│ ├└╼─┐'

hc unlock

killall polybar
while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done
polybar -r --log=error hlbar &

killall compton
while pgrep -u $UID -x compton >/dev/null; do sleep 1; done
compton -c --shadow-exclude 'class_g = "Polybar" || class_g = "Firefox"' &

xrandr --output eDP1 --brightness 0.8

hc pad 1 1 1 25

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
#hc detect_monitors

