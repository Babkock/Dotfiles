(defpoll calendar_day :interval "5h" "date '+%d'")
(defpoll calendar_year :interval "5h" "date '+%Y'")
(defpoll music_progress :interval "1s" "mpc --host=127.0.0.2 | grep '%)' | awk '{print $4}' | tr -d '(%)'")
(defvar swayreboot "pkill -x swaynag; swaynag -f 'VictorMono Nerd Font 15' --background c1449f99 --text e164bfff --button-background 00000077 --button-text e164bfff --button-border-size 0 --button-gap 5 --button-padding 6 --border-bottom-size 0 -m 'Are you sure you want to reboot?' -B 'Reboot' 'loginctl reboot'")
(defvar wayreboot "pkill -x swaynag; swaynag -f 'VictorMono Nerd Font 15' --background 11e9a399 --text 21d9b3ff --button-background 00000077 --button-text 21d9b3ff --button-border-size 0 --button-gap 5 --button-padding 6 --border-bottom-size 0 -m 'Are you sure you want to reboot?' -B 'Reboot' 'loginctl reboot'")
(defvar swaypoweroff "pkill -x swaynag; swaynag -f 'VictorMono Nerd Font 15' --background ca2d2899 --text ea4d48ff --button-background 00000077 --button-text ea4d48ff --button-border-size 0 --button-gap 5 --button-padding 5 --border-bottom-size 0 -m 'Are you sure you want to shut down?' -B 'Shut Down' 'loginctl poweroff' -B 'Reboot' 'loginctl reboot'")
(defvar waypoweroff "pkill -x swaynag; swaynag -f 'VictorMono Nerd Font 15' --background d6040499 --text f61919ff --button-background 00000077 --button-text f61919 --button-border-size 0 --button-gap 5 --button-padding 5 --border-bottom-size 0 -m 'Are you sure you want to shut down?' -B 'Shut Down' 'loginctl poweroff' -B 'Reboot' 'loginctl reboot'")
(defvar swaylogout "pkill -x swaynag; swaynag -f 'VictorMono Nerd Font 15' --background 54a26099 --text 74c280ff --button-background 00000077 --button-text 74c280ff --button-border-size 0 --button-gap 5 --button-padding 5 --border-bottom-size 0 -m 'Are you sure you want to exit the Sway session?' -B 'Exit' 'pkill -x sway'")
(defvar waylogout "pkill -x swaynag; swaynag -f 'VictorMono Nerd Font 15' --background 0cc97b88 --text 1cd98bff --button-background 00000077 --button-text 1cd98bff --button-border-size 0 --button-gap 5 --button-padding 6 --border-bottom-size 0 -m 'Are you sure you want to exit the Wayfire session?' -B 'Exit' 'pkill -x wayfire'")

(defwidget cal [?class]
	(calendar :halign "center"
			  :valign "start"
			  :class {class}
              :active false
			  :day calendar_day
			  :year calendar_year))

(defwidget ssd [?class]
	(circular-progress
	   :thickness 20
	   :class {class}
	   :value {((EWW_DISK["/"].used / EWW_DISK["/"].total)) * 100}))

(defwidget hdd [?class]
	(circular-progress
	   :thickness 20
	   :class {class}
	   :value {((EWW_DISK["/mnt/mega"].used / EWW_DISK["/mnt/mega"].total)) * 100}))

(defwidget system [?class]
    (circular-progress
       :thickness 20
       :class {class}
       :value {EWW_RAM.used_mem_perc}))

(defwidget power [?class]
	(circular-progress
	   :thickness 20
	   :class {class}
	   :value {round(EWW_CPU.avg, 0)}))

(defwidget musicprogress [?class]
	(progress
	   :class {class}
	   :value music_progress
	   :orientation "horizontal"))

(defwidget albumart [?class]
	(box :orientation "vertical"
		 :class {class}))

(defwidget powermenu [?class]
	(box :orientation "vertical"
		 :class {class}
		 :halign "center"
		 :space-evenly "true"
		 (button :class "logout" :onclick {class == "mywaypower" ? waylogout : swaylogout} :timeout 600 "󰍃")
		 (button :class "poweroff" :onclick {class == "mywaypower" ? waypoweroff : swaypoweroff} :timeout 600 "⏻")
		 (button :class "reboot" :onclick {class == "mywaypower" ? wayreboot : swayreboot} :timeout 600 "󰑐")))

(defwindow power
	:wm-ignore: true
	:monitor 0
	:geometry (geometry :x "50px"
						:y "100px"
						:width "190px"
						:height "500px"
						:anchor "top right")
	:stacking "bottom"
	(powermenu :class "mypower"))

(defwindow waypower
	:wm-ignore: true
	:monitor 0
	:geometry (geometry :x "50px"
						:y "100px"
						:width "190px"
						:height "500px"
						:anchor "top right")
	:stacking "bottom"
	(powermenu :class "mywaypower"))

(defwindow calendar
	:wm-ignore: true
	:monitor 1
	:geometry (geometry :x "50px"
						:y "100px"
						:width "310px"
						:height "800px"
						:anchor "top right")
	:stacking "bottom"
	(box :orientation "vertical"
		 :valign "center"
		 (cal :class "cal")
		 (box :orientation "vertical" :class "diskbox"
			(ssd :class "disk"))
		 (box :orientation "vertical" :class "megabox"
			(hdd :class "mega"))))

(defwindow waycalendar
	:wm-ignore: true
	:monitor 2
	:geometry (geometry :x "50px"
						:y "100px"
						:width "310px"
						:height "800px"
						:anchor "top right")
	:stacking "bottom"
	(box :orientation "vertical"
		 :valign "center"
		 (cal :class "waycal")
		 (box :orientation "vertical" :class "waydiskbox"
		     (ssd :class "waydisk"))
		 (box :orientation "vertical" :class "waymegabox"
		     (hdd :class "waymega"))))

(defwindow mem
	:wm-ignore: true
	:monitor 2
	:geometry (geometry :x "50px"
						:y "100px"
						:width "330px"
						:height "850px"
						:anchor "top right")
	:stacking "bottom"
	(box :orientation "vertical"
		(overlay
			(musicprogress :class "progress")
			(albumart :class "art"))
		(box :orientation "vertical" :class "cpubox"
		    (power :class "cpu"))
		(box :orientation "vertical" :class "rambox"
		    (system :class "ram"))))

(defwindow waymem
    :wm-ignore: true
    :monitor 1
    :geometry (geometry :x "50px"
                        :y "100px"
                        :width "330px"
                        :height "850px"
                        :anchor "top right")
    :stacking "bottom"
    (box :orientation "vertical"
		(overlay
			(musicprogress :class "wayprogress")
			(albumart :class "art"))
        (box :orientation "vertical" :class "waycpubox"
		    (power :class "waycpu"))
		(box :orientation "vertical" :class "wayrambox"
		    (system :class "wayram"))))

; vim:filetype=lisp
