#                                              
#    ____  _________ ___  ____  _________  ____ 
#   / __ \/ ___/ __ `__ \/ __ \/ ___/ __ \/ __ \
#  / / / / /__/ / / / / / /_/ / /__/ /_/ / /_/ /
# /_/ /_/\___/_/ /_/ /_/ .___/\___/ .___/ .___/ 
#                     /_/        /_/   /_/
#
ncmpcpp_directory = ~/.ncmpcpp
lyrics_directory = ~/.lyrics

mpd_host = "127.0.0.2"
mpd_port = 6600
mpd_connection_timeout = 3

mpd_music_dir = ~/Music

#mpd_crossfade_time = 5

##### music visualizer #####
##
## Note: In order to make music visualizer work you'll need to use mpd fifo
## output, whose format parameter has to be set to 44100:16:1 for mono
## visualization or 44100:16:2 for stereo visualization. Example configuration
## (it has to be put into mpd.conf):
##
## audio_output {
##        type            "fifo"
##        name            "Visualizer feed"
##        path            "/tmp/mpd.fifo"
##        format          "44100:16:2"
## }
##
#
visualizer_data_source = /tmp/mpd.fifo

#visualizer_output_name = Visualizer feed
##
## If you set format to 44100:16:2, make it 'yes'.
##
visualizer_in_stereo = yes

## Available values: spectrum, wave, wave_filled, ellipse.
visualizer_type = ellipse

visualizer_look = ?$

#visualizer_color = magenta, red, green, cyan, yellow, blue, white
visualizer_color = 4, 44, 143, 88, 210, 50, 91, 12, 146, 192, 214, 205, 68, 140, 44, 125

#system_encoding = ""

playlist_disable_highlight_delay = 3

message_delay_time = 2
## %l - length
## %f - filename
## %D - director
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
song_list_format = {$8(%l)$9} {$3%n$9} {$6%50t$9} {$2%40a$9} {$5%45b$9}

song_status_format = {$2$b"%t"}$9$/b : {$7%a$9} - {$6%b$9} {$8%y$9}
## If you want to make sure that a part of the format is displayed only when
## certain tags are present, you can archieve it by grouping them with brackets,
## e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
## present or '' otherwise.  It is also possible to define a list of
## alternatives by providing several groups and separating them with '|',
## e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
## not present.
##
## Note: If you want to set limit on maximal length of a tag, just put the
## appropriate number between % and character that defines tag type, e.g. to
## make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.  They are
## followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it again,
## but this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename with
## reversed colors.
##
## If you want to use 256 colors and/or background colors in formats (the naming
## scheme is described below in section about color definitions), it can be done
## with the syntax $(COLOR), e.g. to set the artist tag to one of the
## non-standard colors and make it have yellow background, you need to write
## $(197_yellow)%a$(end). Note that for standard colors this is interchangable
## with attributes listed above.
#song_list_format = {%a - }{%t}|{$8%f$9}$R{$3(%l)$9}

#song_status_format = {{%a{ "%b"{ (%y)}} - }{%t}}|{%f}

song_library_format = {%t}|{%f}

alternative_header_first_line_format = $b$1$aqqu$/a$9 {$2%t}|{$2%f}$9 $1$atqq$/a$9$/b

alternative_header_second_line_format = {{$5$b%a$/b$9}{ - $6$b%b$/b$9}{ ($4%y$9)}}|{%D}

#current_item_prefix = $(yellow)$r

#current_item_suffix = $/r$(end)

#current_item_inactive_column_prefix = $(white)$r

#current_item_inactive_column_suffix = $/r$(end)

#browser_playlist_prefix = "$2playlist$9 "

selected_item_prefix = $6

selected_item_suffix = $9

#modified_item_prefix = $3> $9

song_window_title_format = zncmpcpp {%a - }{%t}|{%f}

#browser_sort_mode = name

#browser_sort_format = {%a - }{%t}|{%f} {(%l)}
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to have fixed size, add
## 'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
## screen (so the real width will depend on actual screen size), whereas
## (10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
## is.
##
## - color is optional (if you want the default one, leave the field empty).
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes, separated with
##   character ':', e.g. {lr:Length} gives you right aligned column of lengths
##   named "Length".
##
## - define sequence of tags, that have to be displayed in case predecessor is
##   empty in a way similar to the one in classic song format, i.e. using '|'
##   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
##   display artist tag and then composer and performer if previous ones are not
##   available.
##
song_columns_list_format = (8)[white]{l} (6f)[blue]{NE} (28)[red]{t|f:Title} (25)[green]{a} (22)[magenta]{b} (4)[yellow]{yE}

execute_on_song_change = "/home/babkock/.ncmpcpp/ncmpcpp-ueberzug/ncmpcpp_cover_art.sh & eww reload &"

## The environment variable MPD_PLAYER_STATE is set to the current
## state (either unknown, play, pause, or stop).
#execute_on_player_state_change = ""

#playlist_show_mpd_host = no

#playlist_show_remaining_time = no

#playlist_shorten_total_times = no

playlist_separate_albums = yes

playlist_display_mode = columns

browser_display_mode = columns

search_engine_display_mode = columns

playlist_editor_display_mode = columns

#discard_colors_if_item_is_selected = yes

#show_duplicate_tags = no

incremental_seeking = yes

seek_time = 2

volume_change_step = 2

#autocenter_mode = no

centered_cursor = yes

progressbar_look = 

#default_place_to_search_in = database

user_interface = alternative

#data_fetching_delay = yes

media_library_primary_tag = artist

media_library_albums_split_by_date = yes

#default_find_mode = wrapped

#default_tag_editor_pattern = %n - %t

header_visibility = yes

statusbar_visibility = yes

titles_visibility = no

header_text_scrolling = yes

cyclic_scrolling = yes

lines_scrolled = 3

#lyrics_fetchers = azlyrics, genius, sing365, lyricsmania, metrolyrics, justsomelyrics, jahlyrics, plyrics, tekstowo, internet

follow_now_playing_lyrics = no

fetch_lyrics_for_current_song_in_background = yes

store_lyrics_in_song_dir = no

generate_win32_compatible_filenames = no

allow_for_physical_item_deletion = yes

#lastfm_preferred_language = en

#space_add_mode = add_remove

show_hidden_files_in_local_browser = no
## How shall screen switcher work?
##
## - "previous" - switch between the current and previous screen.
## - "screen1,...,screenN" - switch between given sequence of screens.
##
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock,
## lyrics, last_fm.
#screen_switcher_mode = playlist, browser

startup_screen = clock

#startup_slave_screen = last_fm

#startup_slave_screen_focus = no

#locked_screen_width_part = 50

#ask_for_locked_screen_width_part = yes

#jump_to_now_playing_song_at_start = yes

ask_before_clearing_playlists = no

clock_display_seconds = yes

display_volume_level = yes

display_bitrate = yes

display_remaining_time = yes

regular_expressions = perl

ignore_leading_the = yes

ignore_diacritics = yes

#block_search_constraints_change_if_items_found = yes

mouse_support = yes

mouse_list_scroll_whole_page = yes

empty_tag_marker = <empty>

#tags_separator = " | "

#tag_editor_extended_numeration = no

#media_library_sort_by_mtime = no

enable_window_title = yes

#search_engine_default_search_mode = 1

external_editor = vim

use_console_editor = yes
## It is possible to set a background color by setting a color value
## "<foreground>_<background>", e.g. red_black will set foregound color to red
## and background color to black.
##
## In addition, for terminals that support 256 colors it is possible to set one
## of them by using a number in range [1, 256] instead of color name,
## e.g. numerical value corresponding to red_black is 2_1. To find out if the
## terminal supports 256 colors, run ncmpcpp and check out the bottom of the
## help screen for list of available colors and their numerical values.
##
## What is more, there are two special values for the background color:
## "transparent" and "current". The first one explicitly sets the background to
## be transparent, while the second one allows you to preserve current
## background color and change only the foreground one. It's used implicitly
## when background color is not specified.
##
## Moreover, it is possible to attach format information to selected color
## variables by appending to their end a colon followed by one or more format
## flags, e.g. black:b or red:ur. The following variables support this syntax:
## visualizer_color, color1, color2, empty_tag_color, volume_color,
## state_line_color, state_flags_color, progressbar_color,
## progressbar_elapsed_color, player_state_color, statusbar_time_color,
## alternative_ui_separator_color.
##
## Note: due to technical limitations of older ncurses version, if 256 colors
## are used there is a possibility that you'll be able to use only colors with
## transparent background.
#
colors_enabled = yes

empty_tag_color = magenta

header_window_color = red

volume_color = green

state_line_color = black

state_flags_color = default

main_window_color = default

color1 = red

color2 = green

progressbar_color = black

progressbar_elapsed_color = green

statusbar_color = yellow

statusbar_time_color = yellow

player_state_color = yellow

alternative_ui_separator_color = black

#window_border_color = green

#active_window_border = red


